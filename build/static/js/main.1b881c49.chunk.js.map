{"version":3,"sources":["HeaderCard.js","BreadCrumb.js","LatestUpdateCard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","avatar","marginTop","spacing","HeaderCard","classes","Grid","container","item","className","direction","xs","Typography","variant","color","justify","Avatar","flexGrow","transform","LabelBottomNavigation","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","paper","padding","button","height","width","marginLeft","ComplexGrid","props","Paper","elevation","alignItems","gutterBottom","name","Button","startIcon","href","url","chapter","App","fetchedResult","setFetchedResult","useEffect","fetch","then","response","json","data","Container","wrap","map","apiReturn","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b881c49.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '95%',\n  },\n  avatar: {\n    marginTop: theme.spacing(1.5),\n  }\n}));\n\nexport default function HeaderCard() {\n  const classes = useStyles();\n\n  return (\n    <Grid container item className={classes.root}>\n      <Grid container direction=\"column\" item xs={11}>\n        <Typography\n          variant=\"h4\"\n          color=\"primary\"\n        >\n          Flashcards\n        </Typography>\n        <Typography\n          variant=\"button\"\n          color=\"textPrimary\"\n        >\n          Pick a set to practice\n        </Typography>\n      </Grid>\n      <Grid container item xs={1} justify=\"flex-end\">\n        <Avatar className={classes.avatar}>AC</Avatar>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    transform: 'rotate(-90deg)',\n  },\n}));\n\nexport default function LabelBottomNavigation() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState('favorites');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n      <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\n      <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\n      <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\n    </BottomNavigation>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport StyleIcon from '@material-ui/icons/Style';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n  button: {\n    height: 100,\n    width: '100%',\n    marginLeft: theme.spacing(0.5),\n  },\n}));\n\nexport default function ComplexGrid(props) {\n  const classes = useStyles();\n\n  return (\n    <Grid item className={classes.root}>\n      <Paper className={classes.paper} elevation={4}>\n        <Grid container item>\n          <Grid container item xs={4} justify=\"center\" alignItems=\"center\">\n            <Typography variant=\"h6\" gutterBottom>\n              {props.name}\n            </Typography>\n          </Grid>\n          <Grid container item xs>\n            <Button\n              variant=\"contained\"\n              startIcon={<StyleIcon />}\n              className={classes.button}\n              href={props.url}\n            >\n              {props.chapter}\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nimport HeaderCard from './HeaderCard.js'\nimport BreadCrumb from './BreadCrumb.js'\nimport LatestUpdateCard from './LatestUpdateCard.js'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nconst lastUpdateURL = \"https://thawing-crag-57028.herokuapp.com/api/v1/lastUpdate\";\n\nfunction App() {\n  const classes = useStyles();\n  const [fetchedResult, setFetchedResult] = useState(\n    [\n      {\n        \"chapter\": \"---\",\n        \"name\": \"..........\",\n        \"url\": \"https://thawing-crag-57028.herokuapp.com/api/v1/lastUpdate\"\n      },\n    ]\n  );\n\n  useEffect(() => {\n    // GET request using fetch inside useEffect React hook\n    fetch(lastUpdateURL)\n        .then(response => response.json())\n        .then(data => setFetchedResult(data));\n\n  // empty dependency array means this effect will only run once (like componentDidMount in classes)\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container className={classes.root} spacing={3} direction=\"column\">\n        <Grid container item justify=\"center\">\n          <HeaderCard />\n        </Grid>\n        <Grid container item>\n          <Grid container item xs={2}\n            wrap=\"wrap\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <BreadCrumb />\n          </Grid>\n          <Grid container item xs justify=\"space-between\" spacing={1} direction=\"column\">\n            {\n              fetchedResult.map((apiReturn) => {\n                return <LatestUpdateCard\n                        {...apiReturn}\n                        key={apiReturn.name}\n                       />\n              })\n            }\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
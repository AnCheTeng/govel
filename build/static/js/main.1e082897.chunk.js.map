{"version":3,"sources":["HeaderCard.js","BreadCrumb.js","ControlCard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","avatar","marginTop","spacing","HeaderCard","classes","Grid","container","item","className","direction","xs","Typography","variant","color","justify","Avatar","flexGrow","transform","LabelBottomNavigation","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","display","justifyContent","details","flexDirection","content","flex","hiddenText","width","cover","controls","alignItems","paddingLeft","paddingBottom","playIcon","height","MediaControlCard","props","useTheme","img","chooses","randomDogCat","Math","floor","random","length","pic","setPicResult","useEffect","fetch","redirect","then","res","url","useRandomUnsplash","Card","CardContent","component","name","noWrap","chapter","IconButton","aria-label","href","CardMedia","image","title","App","fetchedResult","setFetchedResult","response","json","data","Container","wrap","map","apiReturn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e082897.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '95%',\n  },\n  avatar: {\n    marginTop: theme.spacing(1.5),\n  }\n}));\n\nexport default function HeaderCard() {\n  const classes = useStyles();\n\n  return (\n    <Grid container item className={classes.root}>\n      <Grid container direction=\"column\" item xs={11}>\n        <Typography\n          variant=\"h4\"\n          color=\"primary\"\n        >\n          Flashcards\n        </Typography>\n        <Typography\n          variant=\"button\"\n          color=\"textPrimary\"\n        >\n          Pick a set to practice\n        </Typography>\n      </Grid>\n      <Grid container item xs={1} justify=\"flex-end\">\n        <Avatar className={classes.avatar}>AC</Avatar>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    transform: 'rotate(-90deg)',\n  },\n}));\n\nexport default function LabelBottomNavigation() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState('favorites');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n      <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\n      <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\n      <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\n    </BottomNavigation>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  hiddenText: {\n    width: '10rem',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\n\nfunction useRandomUnsplash() {\n  const chooses = [\n    'nature', 'water', 'dog', 'cat', 'capybara', 'otter', 'beaver', 'tiger', 'wild'\n  ]\n  const randomElement = chooses[Math.floor(Math.random() * chooses.length)]\n  const randomDogCat = \"https://source.unsplash.com/640x320/?\" + randomElement\n  const [pic, setPicResult] = useState(randomDogCat)\n\n  useEffect(() => {\n    // GET request using fetch inside useEffect React hook\n    fetch(randomDogCat, {redirect: 'manual'})\n        .then((res) => setPicResult(res.url));\n  }, []);\n\n  return pic\n}\n\n\nexport default function MediaControlCard(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const img = useRandomUnsplash();\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h5\" variant=\"h5\">\n            {props.name}\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textSecondary\"\n            noWrap\n            className={classes.hiddenText}\n          >\n            {props.chapter}\n          </Typography>\n        </CardContent>\n        <div className={classes.controls}>\n          <IconButton aria-label=\"previous\">\n            {theme.direction === 'rtl' ? <SkipNextIcon /> : <SkipPreviousIcon />}\n          </IconButton>\n          <IconButton aria-label=\"play/pause\" href={props.url}>\n            <PlayArrowIcon className={classes.playIcon} />\n          </IconButton>\n          <IconButton aria-label=\"next\">\n            {theme.direction === 'rtl' ? <SkipPreviousIcon /> : <SkipNextIcon />}\n          </IconButton>\n        </div>\n      </div>\n      <CardMedia\n        className={classes.cover}\n        image={img}\n        title=\"Live from space album cover\"\n      />\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nimport HeaderCard from './HeaderCard.js'\nimport BreadCrumb from './BreadCrumb.js'\nimport ControlCard from './ControlCard.js'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nconst lastUpdateURL = \"/api/v1/lastUpdate\";\n\nfunction App() {\n  const classes = useStyles();\n  const [fetchedResult, setFetchedResult] = useState(\n    [\n      {\n        \"chapter\": \"---\",\n        \"name\": \"..........\",\n        \"url\": \"https://thawing-crag-57028.herokuapp.com/api/v1/lastUpdate\"\n      },\n    ]\n  );\n  useEffect(() => {\n    fetch(lastUpdateURL)\n        .then(response => response.json())\n        .then(data => setFetchedResult(data));\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container className={classes.root} spacing={3} direction=\"column\">\n        <Grid container item justify=\"center\">\n          <HeaderCard />\n        </Grid>\n        <Grid container item>\n          <Grid container item xs={2}\n            wrap=\"wrap\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <BreadCrumb />\n          </Grid>\n          <Grid container item xs justify=\"center\" spacing={2} direction=\"column\">\n            {\n              fetchedResult.map((apiReturn) => {\n                // return <LatestUpdateCard {...apiReturn} key={apiReturn.name} />\n                return (\n                  <Grid item key={apiReturn.name} >\n                    <ControlCard {...apiReturn}/>\n                  </Grid>\n                )\n                // return <MediaCard {...apiReturn} key={apiReturn.name}/>\n              })\n            }\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}